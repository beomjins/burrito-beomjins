---
- name: Provision | create openstack namespace
  kubernetes.core.k8s:
    name: openstack
    api_version: v1
    kind: Namespace
    state: present
  become: true

- name: Provision | make sure to set up control plane label
  ansible.builtin.command: >-
    kubectl label nodes --overwrite {{ item }} openstack-control-plane=enabled
  become: true
  loop: "{{ groups['controller-node'] }}"

- name: Provision | create openstack artifacts directory
  ansible.builtin.file:
    path: "{{ os_artifacts_dir }}"
    state: directory

- name: Provision | get admin keyring
  ansible.builtin.command: >-
    ceph auth get-key client.admin
  register: result
  become: true

- name: Provision | set fact for admin keyring
  ansible.builtin.set_fact:
    ceph_admin_key: "{{ result.stdout }}"

- name: Provision | get cinder keyring
  ansible.builtin.command: >-
    ceph auth get-key client.cinder
  register: result
  become: true

- name: Provision | set fact for cinder keyring
  ansible.builtin.set_fact:
    ceph_cinder_key: "{{ result.stdout }}"

- name: Provision | templating osh infra values
  ansible.builtin.template:
    dest: "{{ os_artifacts_dir }}/{{ item }}.yml"
    src: "osh_infra/{{ item }}.yml.j2"
    mode: "0644"
  loop: "{{ osh_infra_charts }}"
  tags: osh-infra

- name: Provision | create dependency chart directory
  ansible.builtin.file:
    path: "{{ osh_infra_path }}/{{ item }}/charts"
    state: directory
    mode: "0755"
  loop: "{{ osh_infra_charts }}"
  tags: osh-infra

- name: Provision | symlink helm-toolkit dependency chart
  ansible.builtin.file:
    dest: "{{ osh_infra_path }}/{{ item }}/charts/helm-toolkit"
    src: "{{ osh_infra_path }}/helm-toolkit"
    state: link
  loop: "{{ osh_infra_charts }}"
  tags: osh-infra

- name: Provision | deploy osh infra charts
  kubernetes.core.helm:
    name: "{{ item }}"
    chart_ref: "{{ osh_infra_path }}/{{ item }}"
    release_namespace: openstack
    timeout: "10m0s"
    values_files:
      - "{{ os_artifacts_dir }}/{{ item }}.yml"
  become: true
  loop: "{{ osh_infra_charts }}"
  tags: ["osh-infra", "deploy-chart"]

- name: Provision | create dependency chart directory for osh
  ansible.builtin.file:
    path: "{{ osh_path }}/{{ item }}/charts"
    state: directory
    mode: "0755"
  loop: "{{ osh_charts }}"
  tags: osh

- name: Provision | symlink helm-toolkit dependency chart for osh
  ansible.builtin.file:
    dest: "{{ osh_path }}/{{ item }}/charts/helm-toolkit"
    src: "{{ osh_infra_path }}/helm-toolkit"
    state: link
  loop: "{{ osh_charts }}"
  tags: osh

- name: Provision | templating osh values
  ansible.builtin.template:
    dest: "{{ os_artifacts_dir }}/{{ item }}.yml"
    src: "osh/{{ item }}.yml.j2"
    mode: "0644"
  loop: "{{ osh_charts }}"
  tags: osh

- name: Provision | deploy osh charts
  kubernetes.core.helm:
    release_name: "{{ item }}"
    chart_ref: "{{ osh_path }}/{{ item }}"
    release_namespace: openstack
    timeout: "10m0s"
    values_files:
      - "{{ os_artifacts_dir }}/{{ item }}.yml"
      - "{{ osh_path }}/{{ item }}/values_overrides/yoga-ubuntu_focal.yaml"
  become: true
  loop: "{{ osh_charts }}"
  tags: ["osh", "deploy-chart"]

- name: Provision | templating btx chart values
  ansible.builtin.template:
    dest: "{{ os_artifacts_dir }}/{{ item }}.yml"
    src: "{{ item }}.yml.j2"
    mode: "0644"
  loop: "{{ btx_charts }}"
  tags: btx

- name: Provision | deploy btx charts
  kubernetes.core.helm:
    release_name: "{{ item }}"
    chart_ref: "{{ btx_path }}/{{ item }}"
    release_namespace: openstack
    values_files:
      - "{{ os_artifacts_dir }}/{{ item }}.yml"
  become: true
  loop: "{{ btx_charts }}"
  tags: btx

- name: Provision | create .btx.env
  ansible.builtin.copy:
    dest: "{{ ansible_env.HOME }}/.btx.env"
    src: ".btx.env"
    mode: "0600"
  tags: btx
...
