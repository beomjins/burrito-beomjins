---
- name: Genesis Registry | create registry root directory
  ansible.builtin.file:
    path: "{{ genesis_registry.root_dir }}"
    state: directory
  become: true

- name: Genesis Registry | copy registry binary to other controllers
  ansible.builtin.copy:
    dest: "/usr/bin/registry"
    src: "/usr/bin/registry"
    owner: "root"
    group: "root"
    mode: "0755"
  become: true
  when: inventory_hostname != groups['kube_control_plane'][0]

- name: Genesis Registry | copy systemd service file
  ansible.builtin.copy:
    dest: "{{ item.dest }}"
    src: "{{ ansible_os_family | lower }}{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "0644"
  loop:
    - {dest: "/etc/systemd/system/genesis_registry.service"}
  become: true

- name: Genesis Registry | templating template files
  ansible.builtin.template:
    dest: "{{ item }}"
    src: "{{ ansible_os_family | lower }}{{ item + '.j2' }}"
    mode: "0644"
  loop: 
    - "{{ genesis_registry.conf }}"
  become: true
  notify:
    - genesis registry restart service

- name: Genesis Registry | flush handlers
  ansible.builtin.meta: flush_handlers

- name: Genesis Registry | check service is available
  ansible.builtin.uri:
    url: "http://{{ genesis_registry.addr }}"
    method: GET
    timeout: 3
  failed_when: false
  register: _result
  until: _result.status == 200
  retries: 5
  delay: 5

- name: Genesis Registry | pull registry image from seed registry
  ansible.builtin.shell: >-
    nerdctl pull \
      {{ containerd_insecure_registries.seed_registry }}/{{ item }}
  become: true
  loop: "{{ genesis_registry.images }}"

- name: Genesis Registry | tag registry image for genesis registry
  ansible.builtin.shell: >-
    nerdctl tag \
      {{ containerd_insecure_registries.seed_registry }}/{{ item }} \
      {{ hostvars[inventory_hostname].ip }}:{{ genesis_registry_port }}/{{ item }}
  become: true
  loop: "{{ genesis_registry.images }}"

- name: Genesis Registry | push registry image to each genesis registry
  ansible.builtin.shell: >-
    nerdctl push \
      {{ hostvars[inventory_hostname].ip }}:{{ genesis_registry_port }}/{{ item }}
  become: true
  loop: "{{ genesis_registry.images }}"

- name: Genesis Registry | add genesis registry section in haproxy.cfg
  ansible.builtin.blockinfile:
    path: "/etc/haproxy/haproxy.cfg"
    mode: "0600"
    insertafter: EOF
    marker: "# {mark} GENESIS REGISTRY BLOCK"
    block: >-
      listen localregistry
          bind {{ containerd_insecure_registries.seed_registry }}
          option forwardfor except 127.0.0.0/8
          balance {{ balance }}
          option httpchk GET /
          {% for h in groups['kube_control_plane'] %}
          server {{ h }} {{ hostvars[h].ip }}:{{ registry_service_nodeport }} check inter {{ inter }} rise {{ rise }} fall {{ fall }} on-marked-down shutdown-sessions
          {% endfor %}

      listen genesisregistry
          bind {{ containerd_insecure_registries.genesis_registry }}
          option forwardfor except 127.0.0.0/8
          balance {{ balance }}
          option httpchk GET /
          {% for h in groups['kube_control_plane'] %}
          server {{ h }} {{ hostvars[h].ip }}:{{ genesis_registry_port }} check inter {{ inter }} rise {{ rise }} fall {{ fall }} on-marked-down shutdown-sessions
          {% endfor %}
  become: true
  notify:
    - haproxy restart service

- name: Genesis Registry | apply patch to registry replicaset
  kubernetes.core.k8s_json_patch:
    kind: ReplicaSet
    namespace: "{{ registry_namespace }}"
    name: registry
    patch:
      - op: replace
        path: /spec/template/spec/containers/0/image
        value: "{{ containerd_insecure_registries.genesis_registry }}/library/registry:{{ registry_version }}"
  become: true
  delegate_to: localhost
  run_once: true

- name: Genesis Registry | apply patch to csi-rbdplugin daemonset
  kubernetes.core.k8s_json_patch:
    kind: DaemonSet
    namespace: "ceph-csi"
    name: csi-rbdplugin
    patch: "{{ rbdplugin_patch_list }}"
  become: true
  delegate_to: localhost
  run_once: true

- name: Genesis Registry | apply patch to csi-rbdplugin-provisioner deployment
  kubernetes.core.k8s_json_patch:
    kind: Deployment
    namespace: "ceph-csi"
    name: csi-rbdplugin-provisioner
    patch: "{{ provisioner_patch_list }}"
  become: true
  delegate_to: localhost
  run_once: true

- name: Genesis Registry | take down offline services
  ansible.builtin.shell: >-
    ./offline_services.sh --down registry
  args:
    chdir: "{{ playbook_dir }}/scripts"
  become: true
  register: res
  failed_when: res.rc not in [0, 10]
  delegate_to: "{{ groups['kube_control_plane'][0] }}"
  run_once: true
...
